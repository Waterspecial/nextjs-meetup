{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/boluwatife/Documents/[GigaCourse.Com] Udemy - React - The Complete Guide (incl Hooks, React Router, Redux)/23 - A (Pretty Deep Dive) Introduction to Next.js/06-onwards-to-a-bigger-project-starting-project/pages/index.js\";\nimport Head from 'next/head';\nimport { Fragment } from 'react';\nimport MeetupList from \"../components/meetups/MeetupList\";\nimport { MongoClient } from \"mongodb\";\n\nconst HomePage = props => {\n  /*#__PURE__*/\n  _jsxDEV(Fragment, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 8,\n    columnNumber: 3\n  }, this);\n\n  return /*#__PURE__*/_jsxDEV(MeetupList, {\n    meetups: props.meetups\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 11,\n    columnNumber: 10\n  }, this);\n}; // export async function getServerSieProps (context) {\n//   const  req = context.req\n//   const  res = context.res\n//   return {\n//     props: {\n//       meetups : DUMMY_MEETUPS\n//     }\n//   }\n// }\n\n\nexport async function getStaticProps() {\n  // fetch data from API\n  const client = await MongoClient.connect(\"mongodb+srv://Omi:F1sJPxQaSl8LRTTv@cluster0.wykdcuc.mongodb.net/meetups?retryWrites=true&w=majority\");\n  const db = client.db();\n  const meetupsCollection = db.collection(\"meetups\");\n  const meetups = await meetupsCollection.find().toArray();\n  client.close();\n  return {\n    props: {\n      meetups: meetups.map(meetup => ({\n        title: meetup.title,\n        address: meetup.address,\n        image: meetup.image,\n        id: meetup._id.toString()\n      }))\n    },\n    revalidate: 1\n  };\n}\nexport default HomePage;","map":{"version":3,"sources":["/Users/boluwatife/Documents/[GigaCourse.Com] Udemy - React - The Complete Guide (incl Hooks, React Router, Redux)/23 - A (Pretty Deep Dive) Introduction to Next.js/06-onwards-to-a-bigger-project-starting-project/pages/index.js"],"names":["Head","Fragment","MeetupList","MongoClient","HomePage","props","meetups","getStaticProps","client","connect","db","meetupsCollection","collection","find","toArray","close","map","meetup","title","address","image","id","_id","toString","revalidate"],"mappings":";;AAAA,OAAOA,IAAP,MAAiB,WAAjB;AACA,SAASC,QAAT,QAAyB,OAAzB;AACA,OAAOC,UAAP,MAAuB,kCAAvB;AACA,SAASC,WAAT,QAA4B,SAA5B;;AAGA,MAAMC,QAAQ,GAAIC,KAAD,IAAW;AAC1B;AAAA,UAAC,QAAD;AAAA;AAAA;AAAA;AAAA;;AAGA,sBAAO,QAAC,UAAD;AAAY,IAAA,OAAO,EAAEA,KAAK,CAACC;AAA3B;AAAA;AAAA;AAAA;AAAA,UAAP;AACD,CALD,C,CAOA;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;;;AAEA,OAAO,eAAeC,cAAf,GAAgC;AACrC;AAEA,QAAMC,MAAM,GAAG,MAAML,WAAW,CAACM,OAAZ,CACnB,qGADmB,CAArB;AAGA,QAAMC,EAAE,GAAGF,MAAM,CAACE,EAAP,EAAX;AAEA,QAAMC,iBAAiB,GAAGD,EAAE,CAACE,UAAH,CAAc,SAAd,CAA1B;AACA,QAAMN,OAAO,GAAG,MAAMK,iBAAiB,CAACE,IAAlB,GAAyBC,OAAzB,EAAtB;AAEAN,EAAAA,MAAM,CAACO,KAAP;AAEA,SAAO;AACLV,IAAAA,KAAK,EAAE;AACLC,MAAAA,OAAO,EAAEA,OAAO,CAACU,GAAR,CAAaC,MAAD,KAAa;AAChCC,QAAAA,KAAK,EAAED,MAAM,CAACC,KADkB;AAEhCC,QAAAA,OAAO,EAAGF,MAAM,CAACE,OAFe;AAGhCC,QAAAA,KAAK,EAAGH,MAAM,CAACG,KAHiB;AAIhCC,QAAAA,EAAE,EAAGJ,MAAM,CAACK,GAAP,CAAWC,QAAX;AAJ2B,OAAb,CAAZ;AADJ,KADF;AASLC,IAAAA,UAAU,EAAE;AATP,GAAP;AAWD;AAED,eAAepB,QAAf","sourcesContent":["import Head from 'next/head'\nimport { Fragment } from 'react';\nimport MeetupList from \"../components/meetups/MeetupList\";\nimport { MongoClient } from \"mongodb\";\n\n\nconst HomePage = (props) => {\n  <Fragment>\n    \n  </Fragment>\n  return <MeetupList meetups={props.meetups} />;\n};\n\n// export async function getServerSieProps (context) {\n\n//   const  req = context.req\n//   const  res = context.res\n\n//   return {\n//     props: {\n//       meetups : DUMMY_MEETUPS\n//     }\n//   }\n// }\n\nexport async function getStaticProps() {\n  // fetch data from API\n\n  const client = await MongoClient.connect(\n    \"mongodb+srv://Omi:F1sJPxQaSl8LRTTv@cluster0.wykdcuc.mongodb.net/meetups?retryWrites=true&w=majority\"\n  );\n  const db = client.db();\n\n  const meetupsCollection = db.collection(\"meetups\");\n  const meetups = await meetupsCollection.find().toArray();\n\n  client.close();\n\n  return {\n    props: {\n      meetups: meetups.map((meetup) => ({\n        title: meetup.title,\n        address : meetup.address,\n        image : meetup.image,\n        id : meetup._id.toString()\n      })),\n    },\n    revalidate: 1,\n  };\n}\n\nexport default HomePage;\n"]},"metadata":{},"sourceType":"module"}